Known problems and priority improvements:

"line numbers wrong" message in 3.6 (Webb message 47).
Stack overflow on MSDOS when doing ":ta".
	- make command line buffers dynamic (docmdline(), DoOneCmd())
	- allocate buffers in findtag()
Windows NT: display is not always correct.
Windows NT: CTRL-C in a child shell (created with ":sh" or CTRL-Z) kills Vim.
Some terminals start inverting at the position where the invert code is put.
	This is not handled correctly. Remove 'weirdinvert' hack.
On Diamond Viper 132x43 mode crash on exit (John Lange)
MSDOS: After writing on a network the 'w' bit for others is set.


Documentation:

Add a remark about the limitations of the check for editing the same file
	twice (e.g. when working on different machines) (Webb).
Add more tags to windows.doc, difference.doc, machine.doc
Add tags to index.doc
Use vi.1 manpage to update vim.1 manpage.
Clean up the list of changes. Move it from version.c to separate file?


Problems that will probably not be solved:

Problem with HPterm under X (Cosentino).
Amiga: When using quickfix with the Manx compiler we only get the first 25
	errors. How do we get the rest?
Amiga: The ":cq" command does not always abort the Manx compiler. Why?
Linux: A file with protection r--rw-rw- is seen readonly for others. The
	access() function in GNU libc is probably wrong.
MSDOS: When using smardrive with write-back buffering, writing to a readonly
	floppy will cause problems. How to test for writable floppy first?
When doing a CTRL-Z and typing a command for the shell, while Vim is busy
	(e.g. writing a file), the command for the shell is sometimes eaten by
	Vim, because the terminal mode is changed from RAW to CBREAK.


Further extentions and improvements:

When switching to another file and screen scrolls because of the long message
	and return must be typed, don't scroll the screen back before
	redrawing.
When using "gf" or "[f", ignore first part of hypertext link (Riehm)
	From "type://machine/path" just use "/path".
When calling undo with a single line, check if line is already saved for undo.
Add a way to change the meaning of a mouse click, e.g. with mapping.
When incsearch used and hitting return, no need to search again in many cases,
	saves a lot of time in big files.
Display the help for the -- more -- message only when an illegal key typed.
Set '[ and '] for undo commands (first and last line that was undone).
Besides remembering the last used line number of a file, also remember the
	column. Use it with CTRL-^ et. al.
Add an option to switch on/off the setting of the last-used search pattern by
	the ":ta" command.
For u_save() include the column number. This can be used to set '[ and ']. And
	in the future the undo can be made more efficient (Webb).
":split file1 file2" adds two more windows (Webb).
Put strings from "*" and "#" searches in the search history (Webb). Also for
	other searches, like ":/pat", "vim +/pat file", etc. Don't do this if
	keep_old_search_pattern is TRUE.
Use mouse-button-release code?
When 'columns' or 'lines' is set try to set the window size.
Use the middle mouse button to paste text that has been selected with visual
	mode (remember last selected visual area).
Add the possibility to use more than one argument list: ":arglist 2".
When unhiding a hidden buffer, put the same line at top of the window as the
	one before hiding it.
Add mappings for visual mode; ":vmap" for visual mode, ":nmap" for normal mode
	and ":map" for both; use marks for start/end of selected text.
Add command to show last search pattern and substitute string. Maybe make it
	accessible through a register ("/ for search string)?
Also look for tag file in other directory for tag completion.
When mouse click after 'r' command, get character that was pointed to.
Add possibility to :set an option to the default value (for autocmd).
Add ":which", like "[g" and ":whereis" like "[G".
When setting 'formatoptions' check for illegal characters.
Don't give message "Incomplete last line" when editing binary file.
Be able to read input from a (named) pipe, just like vi can. Use the input
	from the pipe to put in the buffer, not as commands!
Change 'directory' and 'backupdir' into a list of paths. '.' is the same
	directory as the file.
Allow range for ":wq" (Webb).
Make message "search hit xxx, continuin at..." invertable.
Add a next/previous possibility to "[g".
When quitting --more-- with CTRL-C or 'q', don't ask to hit return.
Add other column number to CTRL-G, like in ruler.
When in blockwise visual selection (CTRL-V), allow cursor to be placed
	right of the line.
Add command to go to (esisting) buffer by name ":getbuf filename" (Webb).
^P/^N should be cyclic for the command line completion, although they should
	probably remain non-cyclic for moving through the history (Webb/Demirel)
Allow for vi command "/foo/;/bar" (Webb/Bostic).
Add number option to ":s//2": replace second occurance of string?
Add ":a", ":i" for preloading of named buffers.
In Replace mode, tab replaces as many characters as it takes on the screen,
	text remains at the same position. Requires replace-stack to work with
	strings instead of characters? Implement 'replacealign' in a different
	way from Webb.
Put window title code in separate module, so it can be changed easily.
possibility do operate on current word, line, paragraph with one letter, e.g.
	dr, dd, dp, Qp
Sections in .vimrc that are done for specific file extensions (e.g. for
	setting makeprg and errorformat).
Allow autowrite when doing ":e file" (with an option 'eaw').
When sorting the file name arguments, only sort within one argument, don't
	sort the arguments.
Add icon setting for xterm (riehm/69, mulder/iconname.set).
Make command line arguments options to be combined after a single dash, eg "-nb".
When started to edit another file, make message "file 1 of 8" different.
When entering text, keep other windows on same buffer updated (when a line
	entered)?
Amiga: When 'r' protection bit is not set, file can still be opened
	but gives read errors. Check protection before opening.
Bind windows together, scrolling is done in both windows synchronous
	(horizontally and vertically). Use CTRL-W b?
Re-select last Visual selection with "v." (exactly same text, from '[ to ']).
Don't write any pages into the swapfile until the buffer has been changed.
Catch terminating signals and call ml_sync_all(): SIGHUP, SIGINT, SIGQUIT,
	SIGILL, SIGABRT, SIGFPE, SIGPIPE, SIGALRM, SIGTERM, SIGBUS, SIGSEGV.
Change ".swp" to ".vim", because it give a hint who created the file?
Use termcap 'ts' and 'fs' entries for setting the window title. Check 'hs'
	and use minimum of 'ws' (if present) and Columns to truncate the title.
When writing check for file exists but no permission, "Permission denied".
In dosub() regexec is called twice for the same line. Try to avoid this.
When line is too long to fit on screen, display part where cursor is.
When inserting makes cursor go past end of screen, scroll up in insertchar().
Window updating from memline.c: insert/delete/replace line.
Optimize ml_append() for speed, esp. for reading a file.
V..c should keep indent when 'ai' is set, just like <count>cc.
In visual select mode: Inclusion or exclusion of char under cursor depends
	on movement command. "vwd" and "dw" do the same???
Find out why macros of Stephen Riehm are working strange.
:s///p prints the line after a substitution.
:s///N substitutes N times.
Make CTRL-R (insert register contents) also work in command line mode.
Updatescript() can be done faster with a string instead of a char.
When searching with 'n' give message when getting back where the search first
	started. Remember start of search in '/ mark.
Add option that scrolls screen to put cursor in middle of screen after search.
Add \! to search patterns: matches string that does not match previous atom.
Screen updating is inefficient with CTRL-F and CTRL-B when there are long lines.
Use 'backupdir' for all backup files if it starts with '>'.
When writing a file, name it "foo.new". Then rename "foo" to "foo.bak" and
	"foo.new" to "foo". If dir is not writable or on write error copy
	"foo" to "backupdir/foo.bak" and overwrite "foo". Check for correct
	group/owner and try to set it if not. NO: this breaks with hard links.
	INSTEAD: make Amiga and MSDOS work like unix: first make copy of file,
	then truncate and overwrite original file. Use an option for this,
	default on for Unix, off for Amiga/MSDOS (Sayre has the algorithm
	worked out).
Use CTRL-E and CTRL-Y in insert mode for scroll up/down?
Uppercase characters in ex commands can be made lowercase?
Add special code for some keys: 'kL' delete line, t_bs 'bs', etc.
Filtering a block should only apply to the block, not to the whole lines. When
	the number of lines is increased, add lines. When decreased, padd with
	spaces or delete?
CTRL-V :s should substitute only in the block.
CTRL-V > should move the block, not whole lines.
Add commands to move selected text, without deselecting.
Add "p" command to swap selected text with unnamed buffer.
Add "P" command to insert contents of unnamed buffer, move selected text to
	position of previous deleted (to swap foo and bar in " + foo")
In out-of-memory situations: Free allocated space in undo (after asking).
Insert octal numbers with CTRL-V o, hexadecimal with CTRL-V x and binary
	with CTRL-V b.
List mappings: Once with and without ^ and ~ (meta keys). Use "F1" and "PgUp"
	for MSDOS default mappings.
Add option that tells which characters to display directly, e.g.
	":set gr=32-126,140-244", others are displayed with ^ and ~ and +
Add option to show character value in octal, decimal, hex and screen code.
How does vi detect whether a filter has messed up the screen? Check source.
	After ":w !command" a wait_return?
Improve screen updating code for doput() (use s_ins()).
With 'p' command on last line: scroll screen up (also for terminals without
	insert line command).
Amiga: ExpandWildCards in amiga.c: don't expand if there are no wildcards.
unix: Speedup wildcard expansion of "*", "~" and "$": do it internally, more
	complicated things can still be done with the shell.
Only do wildcard expansion with 'wildchar' when entering a command that has a
	file name as argument (:r :w :! :e :f :n)?
Unix: When comparing two file names to see if they are the same file use stat()
	and compare device/inode; much faster than FullPathName()
In regexp.c: "\^" after "\|" or "\(" is start of line, and "\$" before "\|"
	and "\)" is end of line.
Remember the "last changed" time of the edited file and check it before
	overwriting; another user may have changed it. Also check after
	executing a shell command?
Support for command lines longer than 256 characters (for EXINIT).
Option for filter when reading/writing a file for compression or crypting.
Option to set time for emsg() sleep. Interrupt sleep when key is typed? sleep
	before second message?
Delete message after new command has been entered and have waited for key.
Add "next tag" command for tags that have multiple hits.
Support static tags: first search for tags with current filename: "foo.c:bar",
	then for global tags (without a filename).
History stack for . command?
Use insert/delete char when terminal supports it.
With undo with simple line delete/insert: optimize screen updating.
Optimize screen redraw for slow terminals.
"edit" option: when off changing the buffer is not possible.
Add "-d null" for editing from a script file without displaying.
Make Vim work like vi when stdin is not a tty. Open /dev/tty if there is no
	controlling terminal? Vile does something like this.
Add "-R" for readonly mode (ex has it).
When writing to a readonly file, ask for permission to overwrite it (if file can
	be made writable) and restore file to readonly afterwards.
MSDOS: search for _exrc in the directory where the binary is, instead
	of using $VIM\_exrc.
In insert mode: Remember the characters that were removed with backspace and
	re-insert them one at a time with <key1>, all together with <key2>.
Amiga: Add possibility to set a keymap. The code in amiga.c does not work yet.
Implement 'redraw' option.
Add possibility to put the value of an option into the text: "'lines'p
Unix: WildExpand: Without csh file name with embedded space will be split in two.
With wildcard expansion after '%' and '#', expand current/alternate file name,
	so it can be edited.
Add special code to 'sections' option to define something else but '{' or '}'
	as the start of a section (e.g. one shiftwidth to the right).
Nopaste option: Mappings with non-printable characters are OK.
Add 'indent' option: Always use this amount of indent when starting a new line
	and when formatting text.
Add 'crown' option to 'Q' command: preserve indent of second line.
When formatting with 'Q', break at paragraph boundaries (empty lines).
When 'textwidth' is negative, use for 'Q' only, no automatic formatting.
After formatting with Q the cursor is on the end of the last line; with = and
	when formatprg is set it is at the start of the first line. Not good.
Add 'scrolloffset': scroll when cursor is less then 'scrolloff' lines from
	top/bottom. Remove scrolling with mouse click in first/last line.
Add option to switch off ignoring braces inside quotes for "%" command??
Use pipes for filtering on unix.
Allow for +command and -option on any position in argv[].
Add commands like ]] and [[ that do not include the line jumped to.
When :unab without matching "from" part and several matching "to" parts,
	delete the entry that was used last, instead of the first in the list.
After :set nowrap remove superflous redraw with wrong hor. offset if cursor
	is right of the screen.
Add -x option: crypt/decrypt when writing/reading file.
Add -z option: gzip/gunzip when writing/reading file.
Add count to ':', gives ":.,.+count-1"
Improve online help: Fit into the window (also small ones), hypertext, etc.
	(See also dh1:text/vi/vi.help). View help just like a file?
Support several errorformats, use the first format that matches.
Recognize "$*" in 'makeprg'; replace it by the arguments to :make.
Allow multiple arguments to :unmap.
Add option that contains characters which are included in identifiers;
	default "[a-bA-B0-9]_", for LISP "[a-bA-B0-9]_-".
With :s///c replace \&, ~, etc. when showing the replacement pattern.
With ambigious mapping, print conflicting entry.
In insert mode add # for CTRL-R  (alternate filename).
Highlight search string when found?
Command line: cursor up on empty line: go to previous command, on non-empty
	line: go to previous matching command.
Add command to clear all mappings, "clearmap".
Add text justification option.
When the edited file is a symlink, try to put the .swp file in the same dir as
	the actual file. Adjust FullName().
Add new operator: clear, make area white (replace with spaces)
Add put function that replaces the text under it.
After "inv"ing an option show the value: ":set invpaste" gives "paste is off".
When screen has been scrolled (e.g. after CTRL-D), wait-return for every message, there
	should be only one wait-return at the end.
After executing a shell, put tty back in raw mode (for shells that mess with
	the tty settings)
Improve error messages: when expanding '%': "no filename to substitute for '%'"
	when expanding '#': "no alternate filename to substitute for '#'"
Put warnings in some color (errors are inverted, normal messages plain).
Check handling of CTRL-V and '\' for ":" commands that do not have TRLBAR.
When a file cannot be opened but does exist, give error message.
If file does not exists, check if directory exists.
MSDOS: t_cv and t_ci not set, but do invert char under cursor.
Add option to switch off move to start of line (Waggoner/12 and 13).
Command to show keys that are not used and available for mapping.
Settings edit mode: make file with ":set opt=xx", edit it, parse it as
	ex commands.
When memory gets low, reduce the number of undo levels (with confirmation).
Add 'para_regex' option: regular expression for end of paragraph.
make listings in a more-like way (mappings, files, settings, etc.).
":set -w all": list one option per line.
Before overwriting a non-writable file with ":w!" ask for permission.
Amiga: test for 'w' flag when reading a file.
When appending to the last line, causing it to wrap, screen redraw first does it
	at a wrong position.
Include patches for Russian text (Marinichev/4).
Option not to change the search string when using a :tag command.
Error message for ambiguous mapping: Include the arguments.
:table command (Webb)
Add command to go to last non-blank in line (like 0 vs. ^, $ vs. ???)
Add 'backupdiralways', 'bda' option for 'bdir', like 'da' for 'dir'.
Add option to recognize identifiers with everything but spaces ('forth'?).
	Adjust isidchar().
MSDOS: How about supporting function keys #11 and #12?
With blockwise visual mode and "c" command, insert same text in every line.
Search filenames for starting with $HOME and replace it with "~" when displaying.
For 'shell' option add possibility to give arguments for fast start (e.g. -f).
	Not to be used for ":shell".
Make ":e file1 file2" work like ":n file1 file2"?
 in buffer" when last line in buffer deleted.
When displaying (file xx of yy), add "not" when curbuf is not file xx.
Add commands to do things in all buffers: ":Substitute", ":searchall", etc.
Make ":sleep" accept floating point numbers, like ":sleep 0.01".
When in replace mode and 'expandtab' set, make tab look like spaces.
Support multiple search buffers, so macros can be made without side effects.
With :read set '[ and '] to start/end of new lines
Make builtin termcaps with a configuration file and a program to translate
	it into a .h file.
Use %> and #> for filename without path?
Allow multiple arguments for ":edit", add them to the argument list.
Allow multiple arguments for ":read", read all the files.
Add command to ":read" a file at a certain column (blockwise read?).
Add option to make settings from modelines valid only in the file where they
	were set. Reset options when starting to edit another file.
Support the "abbreviate" command in modelines (Kearns).
For visual mode: "." does a search for the string in the marked area. Only
	when less than two lines. What key to use for backward search?
Matching with "%" should be configurable. 'matchstrings' =
		(/*,*/),(^#if,^#else,^#endif)
Expanding ~ and $VAR in options should be done not only for the first entry.
Add 'resizecmd' option: vi command to be executed when window is resized.
Do not accept mappings when waiting for key hit with --more--.
Keep output from listings in a window, so you can have a look at it while
	working in another window. Put cmdline in a separate window?
Keyword completion code should use the case from the match.
Add regular expression \{m,n\}: m to n matches. \{m\} is m matches, \{m,\} is
	at least m matches. Also do \{,n\}: up to n matches.
When 'backup' is not set and 'writebackup is set, use a unique name for the
	backup file, don't deleted the ".bak" file.
Allow multiple arguments for ":read" and ":edit"; read/edit all files. Also
	allow ":r *" and ":e *".
Add sort of replace mode where case is taken from the old text (Goldfarb).
When doing ":bnext" and other go-to-other-buffer commands, set alternate file.
Support for tabs in specific columns: ":set tabcol=8,20,34,56" (Demirel).
Add 'searchdir' option: Directories to search for file name being
	edited (Demirel).
Add other mode for smart indent: Brackets in same column as text (Goldfarb).
Modifier for the put command: Change to linewise, charwise, blockwise, etc.
Add commands for saving and restoring settings ":set save" "set restore", for
	use in macro's and the like.
Add possibility to ":jumps" to show the text in the line (for loaded files).
When using "Vim -r", the list of swap files found should include info about
	the swap file.

From Elvis:
fontchanges recognized "\\fB" etc.
:color command
:if and friends, conditional statements
Read .exfilerc when starting to edit a new file (can be used to load macros for
	specific file type).
Change cursor shape in command/insert mode.
'flipcase' variable: upper/lower case pairs.

From nvi:
'cdpath' option.
'remapmax' option.
Allow editing lines that do not fit in the window.

From xvim:
Use '\' before commands to make them linewise.
Allow a newline in search patterns (also for :s, can delete newline).
	Add BOW, EOW, NEWL, NLORANY, NLBUTANY, magic 'n' and 'r', etc.
Add register for ':', '?' and '/' commands? (yank_buf()).
Searching in help file.
get code for backspace from termcap.
Remember last cursor position, optimize setcursor().
Add :collapse, remove multiple blank lines (Demirel, Webb)?

From xvi:
CTRL-_ : swap 8th bit of character

From vile:
CTRL-X e: edit file name under the cursor (like ^] and *)
Show unprintable characters in hex.
Use scrollbar.
When horizontal scrolling, use '<' and '>' for lines continuing outside of
	window.
Support putting .swp files in /tmp. Command in rc.local to move .swp files
	from /tmp to some directory before deleting files.
When static tag is ignored because filename is different, but no tag is found,
	retry with ignoring the filenames.
Really read-only mode, impossible to change the text.
Allow multiple arguments to ":stag", make one window for each.


Far future extentions:

Add Ex mode (some people like to use it).
Add macro language with real functions (perl?).
Allow vertical splitting of screen (once).
Allow editing beyond end of line, just like there are all spaces. Switch this
	on with an option or special insert mode command. Also allow editing
	above start and below end of buffer.
MSdos: use extended or expanded memory.
When executing macro's: Save each line for undo only once.
Smart cut/paste: recognize words and adjust spaces before/after them.
Make files with suffix in 'suffixes' option always appear in list of matched
	files, but at the end.
Keyword completion: first look in the file for a match, then in a
	dictionary (Webb).
Option verbose; when on keep the screen uptodate, when off only redisplay when
	input needed. Also possible to use Vim from a shell script.
Change the output to the message line. Don't redraw the screen until the next
	vi command. Remember message line for redraw. Integrate the command line
	in updateScreen().
Mode to keep text formatted while inserting/deleting. Use soft/hard returns with
	an option to switch this off.
Mode to keep C-code formatted (sort of on-line indent). Use colors for
	keywords, comments, etc.
Korn-shell like command line editing (like editing a single line with vi). Use
	:cmap! for mappings. Can be implemented like a buffer containing command
	lines.
Add column numbers to ":" commands (:line1:col1,line2:col2 cmd). Block can be
	selected with CTRL-V.
Add 'hidecomment' option: don't display comments in /* */ and after //.
Add open mode, use it when terminal has no cursor positioning.
File in local directory to store contents of named registers and named marks.
	Write when quitting, read when starting.
Special "drawing mode": a line is drawn where the cursor is moved to. Backspace
	deletes along the line (from jvim).
Save cursor position (and other things) for a next editing session.
Perform commands on multiple windows (:W%s/foo/bar/g), multiple arguments (:A)
	or multiple buffers (:B).
Make undo more memory-efficient: compare text before and after change, only
	remember the lines that really changed.
Support for underlining (underscore-BS-char), bold (char-BS-char) and other
	standout modes switched on/off with , 'overstrike' option (Reiter).
Add vertical mode (Paul Jury, Demirel): "5vdw" deletes a word in five lines,
	"3vitextESC" will insert "text" in three lines, etc..
Highlighting of different kinds of text (e.g. for showing variables, keywords).
Internationalization: wide characters and multibyte char support.
Support to "freeze" the current editor state (buffers, windows, settings, etc.)
	so editing can be resumed at the same point at a later time.
